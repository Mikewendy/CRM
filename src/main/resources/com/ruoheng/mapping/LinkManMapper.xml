<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ruoheng.dao.LinkManMapper">
	<resultMap id="BaseResultMap" type="com.ruoheng.model.LinkMan">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="cusid" property="cusid" jdbcType="INTEGER" />
		<result column="officephone" property="linkname" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="VARCHAR" />
		<result column="zhiwei" property="zhiwei" jdbcType="VARCHAR" />
		<result column="officephone" property="officephone" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, cusid, linkname, sex, zhiwei, officephone, phone
	</sql>

	<select id="find" parameterType="Map" resultMap="BaseResultMap">
		select * from t_customer_linkman
		<where>
			<if test="cusid!=null and cusid!='' ">
				and cusid = #{cusid}
			</if>
		</where>
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>


	<select id="getTotal" parameterType="Map" resultType="Long">
		select count(*) from t_customer_linkman
		<where>
			<if test="cusid!=null and cusid!='' ">
				and cusid = #{cusid}
			</if>
		</where>
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_customer_linkman
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_customer_linkman
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.ruoheng.model.LinkMan">
		insert into t_customer_linkman (id, cusid, linkname,
		sex, zhiwei, officephone,
		phone)
		values (#{id,jdbcType=INTEGER}, #{cusid,jdbcType=INTEGER},
		#{linkname,jdbcType=VARCHAR},
		#{sex,jdbcType=VARCHAR}, #{zhiwei,jdbcType=VARCHAR}, #{officephone,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.ruoheng.model.LinkMan">
		insert into t_customer_linkman
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="cusid != null">
				cusid,
			</if>
			<if test="linkname != null">
				linkname,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="zhiwei != null">
				zhiwei,
			</if>
			<if test="officephone != null">
				officephone,
			</if>
			<if test="phone != null">
				phone,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="cusid != null">
				#{cusid,jdbcType=INTEGER},
			</if>
			<if test="linkname != null">
				#{linkname,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=VARCHAR},
			</if>
			<if test="zhiwei != null">
				#{zhiwei,jdbcType=VARCHAR},
			</if>
			<if test="officephone != null">
				#{officephone,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.ruoheng.model.LinkMan">
		update t_customer_linkman
		<set>
			<if test="cusid != null">
				cusid = #{cusid,jdbcType=INTEGER},
			</if>
			<if test="linkname != null">
				linkname = #{linkname,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=VARCHAR},
			</if>
			<if test="zhiwei != null">
				zhiwei = #{zhiwei,jdbcType=VARCHAR},
			</if>
			<if test="officephone != null">
				officephone = #{officephone,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ruoheng.model.LinkMan">
		update t_customer_linkman
		set cusid = #{cusid,jdbcType=INTEGER},
		linkname = #{linkname,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=VARCHAR},
		zhiwei = #{zhiwei,jdbcType=VARCHAR},
		officephone = #{officephone,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>